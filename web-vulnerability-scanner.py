import requests
from bs4 import BeautifulSoup

# Test payloads for SQL Injection and XSS
SQLI_PAYLOADS = ["' OR '1'='1", "admin' --", "' OR '1'='1' --"]
XSS_PAYLOADS = ["<script>alert('XSS')</script>", "<img src='x' onerror='alert(1)'>"]


def get_forms(url):
    """Extract all form tags from the given URL."""
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    return soup.find_all('form')


def form_details(form):
    """Extract details from a form (action, method, inputs)."""
    details = {}
    details['action'] = form.attrs.get('action', '').lower()
    details['method'] = form.attrs.get('method', 'get').lower()
    details['inputs'] = []
    
    for input_tag in form.find_all('input'):
        input_type = input_tag.attrs.get('type', 'text')
        input_name = input_tag.attrs.get('name')
        details['inputs'].append({'type': input_type, 'name': input_name})
    
    return details


def test_sqli(url, form_details):
    """Test for SQL Injection by injecting payloads into form fields."""
    for payload in SQLI_PAYLOADS:
        data = {}
        for input in form_details['inputs']:
            if input['name']:
                data[input['name']] = payload
        
        if form_details['method'] == 'post':
            response = requests.post(url, data=data)
        else:
            response = requests.get(url, params=data)
        
        if "sql syntax" in response.text.lower() or "mysql_fetch" in response.text.lower():
            print(f"[!] Possible SQL Injection vulnerability detected at {url}")
            return True
    return False


def test_xss(url, form_details):
    """Test for XSS by injecting payloads into form fields."""
    for payload in XSS_PAYLOADS:
        data = {}
        for input in form_details['inputs']:
            if input['name']:
                data[input['name']] = payload
        
        if form_details['method'] == 'post':
            response = requests.post(url, data=data)
        else:
            response = requests.get(url, params=data)
        
        if payload in response.text:
            print(f"[!] Possible XSS vulnerability detected at {url}")
            return True
    return False


def scan_website(url):
    """Scan a website for SQL Injection and XSS vulnerabilities."""
    print(f"[+] Scanning {url}...")
    forms = get_forms(url)
    print(f"[*] Found {len(forms)} forms on {url}")
    
    for form in forms:
        details = form_details(form)
        action = details['action'] if details['action'].startswith("http") else url + details['action']
        
        if test_sqli(action, details):
            print("[!] SQL Injection detected!")
        if test_xss(action, details):
            print("[!] XSS detected!")
    
    print("[+] Scan completed.")


if __name__ == "__main__":
    target_url = input("Enter the URL to scan: ")
    scan_website(target_url)